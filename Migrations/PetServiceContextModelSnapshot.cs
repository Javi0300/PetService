// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetService.Models;

#nullable disable

namespace PetService.Migrations
{
    [DbContext(typeof(PetServiceContext))]
    partial class PetServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PetService.Models.Cita", b =>
                {
                    b.Property<int>("IdCitas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCitas"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPerro")
                        .HasColumnType("int");

                    b.Property<int>("IdPropietario")
                        .HasColumnType("int");

                    b.HasKey("IdCitas");

                    b.HasIndex("IdPerro");

                    b.HasIndex("IdPropietario");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("PetService.Models.Direcciones", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccion"), 1L, 1);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdDireccion");

                    b.HasIndex("IdPropietario");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("PetService.Models.Municipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMunicipio"), 1L, 1);

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMunicipio");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("PetService.Models.Perro", b =>
                {
                    b.Property<int>("IdPerro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdPerro");

                    b.ToTable("Perros");
                });

            modelBuilder.Entity("PetService.Models.Producto", b =>
                {
                    b.Property<int>("IdProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductos"), 1L, 1);

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Inventario")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdProductos");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PetService.Models.Propietario", b =>
                {
                    b.Property<int>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.HasKey("IdPropietario");

                    b.ToTable("Propietarios");
                });

            modelBuilder.Entity("PetService.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"), 1L, 1);

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdServicio");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("PetService.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("Contraseña")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Edad")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Usuario");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PetService.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPropietario")
                        .HasColumnType("int");

                    b.HasKey("IdVenta");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("PetService.Models.VentaDetalle", b =>
                {
                    b.Property<int>("IdVentaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Costo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.HasKey("IdVentaDetalle");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdServicio");

                    b.ToTable("Venta_Detalle", (string)null);
                });

            modelBuilder.Entity("PetService.Models.Cita", b =>
                {
                    b.HasOne("PetService.Models.Perro", "IdPerroNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdPerro")
                        .IsRequired()
                        .HasConstraintName("FK_Citas_Perros");

                    b.HasOne("PetService.Models.Propietario", "IdPropietarioNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("IdPropietario")
                        .IsRequired()
                        .HasConstraintName("FK_Citas_Propietarios");

                    b.Navigation("IdPerroNavigation");

                    b.Navigation("IdPropietarioNavigation");
                });

            modelBuilder.Entity("PetService.Models.Direcciones", b =>
                {
                    b.HasOne("PetService.Models.Propietario", "IdPropietarioNavigation")
                        .WithMany("Direcciones")
                        .HasForeignKey("IdPropietario")
                        .HasConstraintName("FK_Direcciones_Propietarios");

                    b.Navigation("IdPropietarioNavigation");
                });

            modelBuilder.Entity("PetService.Models.Perro", b =>
                {
                    b.HasOne("PetService.Models.Propietario", "IdPerroNavigation")
                        .WithOne("Perro")
                        .HasForeignKey("PetService.Models.Perro", "IdPerro")
                        .IsRequired()
                        .HasConstraintName("FK_Perros_Propietarios");

                    b.Navigation("IdPerroNavigation");
                });

            modelBuilder.Entity("PetService.Models.Propietario", b =>
                {
                    b.HasOne("PetService.Models.Municipio", "IdPropietarioNavigation")
                        .WithOne("Propietario")
                        .HasForeignKey("PetService.Models.Propietario", "IdPropietario")
                        .IsRequired()
                        .HasConstraintName("FK_Propietarios_Municipios");

                    b.Navigation("IdPropietarioNavigation");
                });

            modelBuilder.Entity("PetService.Models.Venta", b =>
                {
                    b.HasOne("PetService.Models.Propietario", "IdVentaNavigation")
                        .WithOne("Venta")
                        .HasForeignKey("PetService.Models.Venta", "IdVenta")
                        .IsRequired()
                        .HasConstraintName("FK_Ventas_Propietarios");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("PetService.Models.VentaDetalle", b =>
                {
                    b.HasOne("PetService.Models.Producto", "IdProductoNavigation")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Venta_Detalle_Productos");

                    b.HasOne("PetService.Models.Servicio", "IdServicioNavigation")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("IdServicio")
                        .HasConstraintName("FK_Venta_Detalle_Servicios");

                    b.HasOne("PetService.Models.Venta", "IdVentaDetalleNavigation")
                        .WithOne("VentaDetalle")
                        .HasForeignKey("PetService.Models.VentaDetalle", "IdVentaDetalle")
                        .IsRequired()
                        .HasConstraintName("FK_Venta_Detalle_Ventas");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdServicioNavigation");

                    b.Navigation("IdVentaDetalleNavigation");
                });

            modelBuilder.Entity("PetService.Models.Municipio", b =>
                {
                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("PetService.Models.Perro", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("PetService.Models.Producto", b =>
                {
                    b.Navigation("VentaDetalles");
                });

            modelBuilder.Entity("PetService.Models.Propietario", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("Direcciones");

                    b.Navigation("Perro");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("PetService.Models.Servicio", b =>
                {
                    b.Navigation("VentaDetalles");
                });

            modelBuilder.Entity("PetService.Models.Venta", b =>
                {
                    b.Navigation("VentaDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
